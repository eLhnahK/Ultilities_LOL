# Form implementation generated from reading ui file 'GUI_LOL.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import webbrowser, subprocess, re, time, threading
from LCUHelper import LCUHelper


def getPortPassLCU():
    infoLCU = []
    outputCMD = subprocess.getoutput('wmic PROCESS WHERE name="LeagueClientUx.exe" GET commandline')
    if outputCMD.__len__() > 1000:
        port = re.search(r"(--app-port=([0-9]*))", outputCMD).group(2)
        password = re.search(r"(--remoting-auth-token=([\w-]*))", outputCMD).group(2)
        infoLCU.append(port)
        infoLCU.append(password)

        #index "0" -> port, "1" -> password
        return infoLCU
    else:
        return infoLCU

def messageBoxCus(text: str, iconText: QtWidgets.QMessageBox.Icon):
    msgBox = QtWidgets.QMessageBox()
    msgBox.setIcon(iconText)
    msgBox.setWindowIcon(QtGui.QIcon.fromTheme('icon', QtGui.QIcon("icon.png")))
    msgBox.setWindowTitle("LOL Ultilities")           
    msgBox.setText(text)           
    msgBox.exec()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        portpassLCU = getPortPassLCU()
        if len(portpassLCU) == 0:
            # msgBox = QtWidgets.QMessageBox()
            # msgBox.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            # msgBox.setWindowIcon(QtGui.QIcon.fromTheme('icon', QtGui.QIcon("icon.png")))
            # msgBox.setWindowTitle("LOL Ultilities")           
            # msgBox.setText("League Client not found, please try again later!")           
            # msgBox.exec()
            messageBoxCus("League Client not found, please try again later!", QtWidgets.QMessageBox.Icon.Warning)
            exit()

        lcuhelper = LCUHelper(portpassLCU[0], portpassLCU[1])
        while True:
            try:
                dataChamps = lcuhelper.getAvailableChamps()
                dataSummoner = lcuhelper.getDataSummoner()
                if len(dataChamps) != 0 and len(dataSummoner) != 0:
                    break
            except:
                time.sleep(0.1)

        

        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(621, 230)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: rgb(140, 140, 140)")
        MainWindow.setTabShape(QtWidgets.QTabWidget.TabShape.Triangular)
        MainWindow.setDockNestingEnabled(False)
        MainWindow.setFixedSize(621,230)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(310, 10, 300, 183))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.groupBox.setObjectName("groupBox")
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(20, 40, 61, 16))
        self.label_2.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(20, 70, 61, 16))
        self.label_3.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(20, 100, 61, 16))
        self.label_4.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.label_4.setObjectName("label_4")
        self.btnMyFacebook = QtWidgets.QPushButton(parent=self.groupBox)
        self.btnMyFacebook.setGeometry(QtCore.QRect(10, 140, 281, 23))
        self.btnMyFacebook.setStyleSheet("color: rgb(170, 85, 255);\n""background :rgb(0, 0, 0)")
        self.btnMyFacebook.setObjectName("btnMyFacebook")
        self.label_6 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(90, 32, 191, 31))
        self.label_6.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(255, 0, 0);")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(90, 70, 191, 16))
        self.label_7.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 0, 255)")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(90, 100, 191, 16))
        self.label_8.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(255, 255, 0)")
        self.label_8.setObjectName("label_8")
        self.groupBox_2 = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 10, 298, 183))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.groupBox_2.setObjectName("groupBox_2")
        self.cbChampions = QtWidgets.QComboBox(parent=self.groupBox_2)
        self.cbChampions.setGeometry(QtCore.QRect(120, 40, 161, 22))
        self.cbChampions.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.cbChampions.setObjectName("cbChampions")
        for champ in dataChamps:
            self.cbChampions.addItem(f"{champ['id']} - {champ['name']}")        
        self.label = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label.setGeometry(QtCore.QRect(10, 30, 101, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.label.setObjectName("label")
        self.cbPickOnly = QtWidgets.QCheckBox(parent=self.groupBox_2)
        self.cbPickOnly.setGeometry(QtCore.QRect(10, 80, 101, 17))
        self.cbPickOnly.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.cbPickOnly.setObjectName("cbPickOnly")
        self.cbLock = QtWidgets.QCheckBox(parent=self.groupBox_2)
        self.cbLock.setGeometry(QtCore.QRect(220, 80, 61, 17))
        self.cbLock.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";")
        self.cbLock.setObjectName("cbLock")
        self.btnStart = QtWidgets.QPushButton(parent=self.groupBox_2)
        self.btnStart.setGeometry(QtCore.QRect(10, 120, 131, 51))
        self.btnStart.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 255, 0);\n""background-color: rgb(255, 0, 0)")
        self.btnStart.setObjectName("btnStart")
        self.btnStop = QtWidgets.QPushButton(parent=self.groupBox_2)
        self.btnStop.setGeometry(QtCore.QRect(150, 120, 131, 51))
        self.btnStop.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 0, 0);\n""background-color: rgb(150, 150, 150)")
        self.btnStop.setObjectName("btnStop")
        self.btnStop.setEnabled(False)
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(215, 192, 191, 16))
        self.label_5.setStyleSheet("\n""color: rgb(85, 255, 255);\n""backgroud color: rgb(255, 255, 255)")
        self.label_5.setObjectName("label_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        self.label_6.setText(dataSummoner[0])
        self.label_7.setText(dataSummoner[1])
        self.label_8.setText(dataSummoner[2])     
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.btnStart.clicked.connect(lambda: self.runBtnStart(lcuhelper, dataSummoner[2], self.cbChampions.currentText()))           
        self.btnStop.clicked.connect(lambda: self.runBtnStop(lcuhelper))
        self.btnMyFacebook.clicked.connect(self.openMyFacebook)
        self.cbPickOnly.clicked.connect(self.checkCbPickOnly)
        self.cbLock.clicked.connect(self.checkCbLock)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "LOL Utilities"))
        self.groupBox.setTitle(_translate("MainWindow", "Player"))
        self.label_2.setText(_translate("MainWindow", "Name:"))
        self.label_3.setText(_translate("MainWindow", "Level:"))
        self.label_4.setText(_translate("MainWindow", "ID:"))
        self.btnMyFacebook.setText(_translate("MainWindow", "My Facebook <3"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Utilities"))

        self.label.setText(_translate("MainWindow", "Champions:"))
        self.cbPickOnly.setText(_translate("MainWindow", "Only Pick"))
        self.cbLock.setText(_translate("MainWindow", "Lock"))
        self.btnStart.setText(_translate("MainWindow", "Start"))
        self.btnStop.setText(_translate("MainWindow", "Stop"))
        self.label_5.setText(_translate("MainWindow", "Â© 2023 eLhnahK - All Rights Reserved."))

    def runBtnStart(self, lcuhelper: LCUHelper, summonerId: str, championId: str):     
        if self.cbPickOnly.isChecked() == True and self.cbLock.isChecked() == False:
            lcuhelper.isStopThreading = False
            threadCreate = threading.Thread(target=lcuhelper.quickPickChamp, args=(summonerId, championId, False))
            self.btnStart.setEnabled(False)
            self.btnStart.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 0, 0);\n""background-color: rgb(150, 150, 150)")
            self.btnStop.setEnabled(True)
            self.btnStop.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(255, 0, 0);\n""background-color: rgb(0, 255, 0)")
            self.cbPickOnly.setEnabled(False)
            self.cbChampions.setEnabled(False)
            threadCreate.start()
        elif self.cbPickOnly.isChecked() == False and self.cbLock.isChecked() == True:
            lcuhelper.isStopThreading = False
            threadCreate = threading.Thread(target=lcuhelper.quickPickChamp, args=(summonerId, championId, True))
            self.btnStart.setEnabled(False)
            self.btnStart.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 0, 0);\n""background-color: rgb(150, 150, 150)")
            self.btnStop.setEnabled(True)
            self.btnStop.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(255, 0, 0);\n""background-color: rgb(0, 255, 0)")
            self.cbLock.setEnabled(False)
            self.cbChampions.setEnabled(False)
            threadCreate.start()
        else:
            messageBoxCus("Please select mode (Pick Only of Lock)", QtWidgets.QMessageBox.Icon.Information)
        

    def runBtnStop(self, lcuhelper: LCUHelper):
        lcuhelper.isStopThreading = True
        self.btnStop.setEnabled(False)
        self.btnStop.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 0, 0);\n""background-color: rgb(150, 150, 150)")
        self.btnStart.setEnabled(True)
        self.btnStart.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""color: rgb(0, 255, 0);\n""background-color: rgb(255, 0, 0)")
        if self.cbPickOnly.isChecked() == True and self.cbLock.isChecked() == False:
            self.cbPickOnly.setEnabled(True)
        elif self.cbPickOnly.isChecked() == False and self.cbLock.isChecked() == True:
            self.cbLock.setEnabled(True)
        self.cbChampions.setEnabled(True)
        
        

    def openMyFacebook(self):
        webbrowser.open("https://www.facebook.com/lehquockhanh", new=0, autoraise=True)

    def checkCbPickOnly(self):
        if self.cbPickOnly.isChecked():
            self.cbLock.setEnabled(False)
            self.cbLock.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""background-color: rgb(150, 150, 150)")          
        else:
            self.cbLock.setEnabled(True)
            self.cbLock.setStyleSheet("font: 75 bold 14pt \"Times New Roman\"")
    
    def checkCbLock(self):
        if self.cbLock.isChecked():
            self.cbPickOnly.setEnabled(False)
            self.cbPickOnly.setStyleSheet("font: 75 bold 14pt \"Times New Roman\";\n""background-color: rgb(150, 150, 150)")          
        else:
            self.cbPickOnly.setEnabled(True)
            self.cbPickOnly.setStyleSheet("font: 75 bold 14pt \"Times New Roman\"")

        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
